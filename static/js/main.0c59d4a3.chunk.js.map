{"version":3,"sources":["components/ProgressWidget.jsx","components/AmmoCount.jsx","components/HpBar.jsx","components/Controls.jsx","components/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","waveCounter","fontSize","typography","pxToRem","timeLeft","timerInSeconds","useTheme","classes","Paper","elevation","style","padding","spacing","position","left","top","className","Typography","ammoCount","currentAmmoInMagazine","totalAmmoCount","right","bottom","colorPrimary","background","linearProgressRoot","height","borderRadius","hp","border","transform","LinearProgress","barColorPrimary","variant","value","controls","message","useState","setHp","setTotalAmmoCount","setCurrentAmmoInMagazine","setWaveCounter","setTimerInSeconds","timeSinceLastBullet","useRef","overlayOpacity","setOverlayOpacity","reloadingIndicator","setReloadingIndicator","bullets","zombies","zombiesSpawnIntervalInSeconds","frameCounter","timeWhenLastZombieSpawned","firingEnabled","zombiesSpawningEnabled","gameOverMode","framesSinceLastZombieSound","mouseDown","playerPosition","X","Math","floor","MAP_SIZE_X_IN_PIXELS","Y","MAP_SIZE_Y_IN_PIXELS","mousePosition","window","innerWidth","innerHeight","spawnZombie","current","random","zombieCoordinatesGenerator","zombieCoordsNotOffsetX","zombieCoordsNotOffsetY","push","positionX","positionY","health","flankCounter","initializeReloading","reloadSound","play","setTimeout","prev","startWave","cooldownMusic","stop","waveMusic","startCooldown","dispatchMessage","useEffect","mouseMovementHandler","e","clientX","clientY","document","addEventListener","removeEventListener","img","firingSound","zombieHit1","zombieHit2","zombieHit3","zombieShot","zombieDead","gameOver","messageRef","setMessage","mode","transition","ProgressWidget","AmmoCount","HpBar","mousePressed","mouseReleased","preload","p5","loadSound","loadImage","setup","canvasParentRef","createCanvas","parent","frameRate","scrollTo","draw","vectorX","vectorY","vector","createVector","abs","fireBullets","keyIsDown","moreThanOneKeyPressed","movementSpeed","sqrt","movement","image","drawMap","fill","angleMode","DEGREES","translate","rotate","atan2","rect","pop","drawPlayer","forEach","zombie","dist","pow","r","m","undefined","length","i","bullet","ellipse","x","y","splice","drawBullets","drawZombie","j","checkBulletCollision","FRAME_RATE","checkDamage","drawCursor","CircularProgress","size","display","opacity","backgroundColor","ref","textAlign","Controls","responsiveFontSizes","createTheme","fontFamily","join","palette","primary","main","error","type","App","ThemeProvider","CssBaseline","Game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c59d4a3.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { makeStyles, Typography, useTheme, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"20vw\",\r\n  },\r\n  waveCounter: {\r\n    fontSize: theme.typography.pxToRem(50),\r\n  },\r\n  timeLeft: {\r\n    fontSize: theme.typography.pxToRem(50),\r\n  },\r\n}));\r\n\r\nexport default ({ waveCounter, timerInSeconds }) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      elevation={4}\r\n      style={{\r\n        padding: theme.spacing(2),\r\n        position: \"fixed\",\r\n        left: 25,\r\n        top: 25,\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <Typography className={classes.waveCounter}>\r\n        Wave: {waveCounter}\r\n      </Typography>\r\n      <Typography className={classes.timeLeft}>\r\n        Time left: {timerInSeconds}\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { makeStyles, Typography, useTheme, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 180,\r\n  },\r\n  ammoCount: {\r\n    fontSize: theme.typography.pxToRem(50),\r\n  },\r\n}));\r\n\r\nexport default ({ currentAmmoInMagazine, totalAmmoCount }) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      elevation={4}\r\n      style={{\r\n        padding: theme.spacing(2),\r\n        position: \"fixed\",\r\n        right: 25,\r\n        bottom: 25,\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <Typography className={classes.ammoCount}>\r\n        {currentAmmoInMagazine}/{totalAmmoCount}\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  useTheme,\r\n  Paper,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"30vw\",\r\n  },\r\n  colorPrimary: {\r\n    background: \"red\",\r\n  },\r\n  linearProgressRoot: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n}));\r\n\r\nexport default ({ hp }) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      elevation={4}\r\n      style={{\r\n        border: \"2px solid white\",\r\n        borderRadius: 20,\r\n        padding: theme.spacing(2),\r\n        position: \"fixed\",\r\n        left: \"50vw\",\r\n        transform: \"translate(-50%, 0)\",\r\n        top: 25,\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <LinearProgress\r\n        classes={{\r\n          barColorPrimary: classes.colorPrimary,\r\n          root: classes.linearProgressRoot,\r\n        }}\r\n        variant=\"determinate\"\r\n        value={hp}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { makeStyles, Typography, useTheme, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 180,\r\n  },\r\n  controls: {\r\n    fontSize: theme.typography.pxToRem(30),\r\n  },\r\n}));\r\n\r\nexport default ({ currentAmmoInMagazine, totalAmmoCount }) => {\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      elevation={4}\r\n      style={{\r\n        padding: theme.spacing(2),\r\n        position: \"fixed\",\r\n        top: 25,\r\n        right: 25,\r\n        width: \"16vw\",\r\n      }}\r\n      className={classes.root}\r\n    >\r\n      <Typography className={classes.controls}>Control: W,A,S,D</Typography>\r\n      <Typography className={classes.controls}>Reload: R</Typography>\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport \"p5/lib/addons/p5.sound\";\r\nimport ProgressWidget from \"./ProgressWidget\";\r\nimport AmmoCount from \"./AmmoCount\";\r\nimport HpBar from \"./HpBar\";\r\nimport {\r\n  Typography,\r\n  makeStyles,\r\n  useTheme,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Controls from \"./Controls\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"10vw\",\r\n  },\r\n  message: {\r\n    fontSize: theme.typography.pxToRem(150),\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const MAP_SIZE_X_IN_PIXELS = 8000;\r\n  const MAP_SIZE_Y_IN_PIXELS = 8000;\r\n  const MOVEMENT_SPEED = 5;\r\n  const BACKGROUND_SIZE_X_IN_PIXELS = 2893;\r\n  const BACKGROUND_SIZE_Y_IN_PIXELS = 2893;\r\n  const BORDER_WIDTH = 100;\r\n  const BULLET_SPEED = 30;\r\n  const BULLET_FIRING_SPEED_IN_FRAMES = 15;\r\n  const ZOMBIE_SPEED = 5;\r\n  const FRAME_RATE = 60;\r\n  const ZOMBIE_FLANK = 35;\r\n\r\n  const [hp, setHp] = useState(100);\r\n  const [totalAmmoCount, setTotalAmmoCount] = useState(90);\r\n  const [currentAmmoInMagazine, setCurrentAmmoInMagazine] = useState(30);\r\n  const [waveCounter, setWaveCounter] = useState(0);\r\n  const [timerInSeconds, setTimerInSeconds] = useState(10);\r\n  const timeSinceLastBullet = useRef(BULLET_FIRING_SPEED_IN_FRAMES);\r\n  const [overlayOpacity, setOverlayOpacity] = useState(0);\r\n  const [reloadingIndicator, setReloadingIndicator] = useState(false);\r\n\r\n  const theme = useTheme();\r\n  const classes = useStyles();\r\n\r\n  const bullets = useRef([]);\r\n\r\n  const zombies = useRef([]);\r\n  const zombiesSpawnIntervalInSeconds = useRef(999);\r\n  const frameCounter = useRef(0);\r\n  const timeWhenLastZombieSpawned = useRef(0);\r\n  const firingEnabled = useRef(false);\r\n  const zombiesSpawningEnabled = useRef(false);\r\n  const gameOverMode = useRef(false);\r\n  const framesSinceLastZombieSound = useRef(999);\r\n\r\n  const mouseDown = useRef(false);\r\n\r\n  const playerPosition = useRef({\r\n    X: Math.floor(MAP_SIZE_X_IN_PIXELS / 2) - 1000,\r\n    Y: Math.floor(MAP_SIZE_Y_IN_PIXELS / 2),\r\n  });\r\n\r\n  const mousePosition = useRef({\r\n    X: Math.floor(window.innerWidth / 2),\r\n    Y: Math.floor(window.innerHeight / 2),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const mouseMovementHandler = (e) => {\r\n      mousePosition.current.X = e.clientX;\r\n      mousePosition.current.Y = e.clientY;\r\n    };\r\n    document.addEventListener(\"mousemove\", mouseMovementHandler);\r\n\r\n    return () =>\r\n      document.removeEventListener(\"mousemove\", mouseMovementHandler);\r\n  }, []);\r\n\r\n  function movement(p5) {\r\n    let moreThanOneKeyPressed = false;\r\n\r\n    if (\r\n      (p5.keyIsDown(65) && p5.keyIsDown(87)) ||\r\n      (p5.keyIsDown(68) && p5.keyIsDown(87)) ||\r\n      (p5.keyIsDown(68) && p5.keyIsDown(83)) ||\r\n      (p5.keyIsDown(65) && p5.keyIsDown(83))\r\n    ) {\r\n      moreThanOneKeyPressed = true;\r\n    }\r\n\r\n    const movementSpeed = moreThanOneKeyPressed\r\n      ? MOVEMENT_SPEED / Math.sqrt(2)\r\n      : MOVEMENT_SPEED;\r\n\r\n    if (playerPosition.current.X > BORDER_WIDTH) {\r\n      // left\r\n      if (p5.keyIsDown(65)) {\r\n        playerPosition.current.X -= movementSpeed;\r\n      }\r\n    }\r\n\r\n    // right\r\n    if (playerPosition.current.X < MAP_SIZE_X_IN_PIXELS - BORDER_WIDTH) {\r\n      if (p5.keyIsDown(68)) {\r\n        playerPosition.current.X += movementSpeed;\r\n      }\r\n    }\r\n\r\n    // top\r\n    if (playerPosition.current.Y > BORDER_WIDTH) {\r\n      if (p5.keyIsDown(87)) {\r\n        playerPosition.current.Y -= movementSpeed;\r\n      }\r\n    }\r\n\r\n    // bottom\r\n    if (playerPosition.current.Y < MAP_SIZE_Y_IN_PIXELS - BORDER_WIDTH) {\r\n      if (p5.keyIsDown(83)) {\r\n        playerPosition.current.Y += movementSpeed;\r\n      }\r\n    }\r\n  }\r\n\r\n  function drawPlayer(p5) {\r\n    p5.fill(0);\r\n    p5.angleMode(p5.DEGREES);\r\n\r\n    p5.push();\r\n\r\n    p5.translate(\r\n      Math.floor(window.innerWidth / 2),\r\n      Math.floor(window.innerHeight / 2)\r\n    );\r\n\r\n    if (mousePosition.current.X - Math.floor(window.innerWidth / 2) === 0) {\r\n      if (mousePosition.current.Y - Math.floor(window.innerHeight / 2) > 0) {\r\n        p5.rotate(90);\r\n      } else {\r\n        p5.rotate(270);\r\n      }\r\n    } else {\r\n      p5.rotate(\r\n        p5.atan2(\r\n          mousePosition.current.Y - Math.floor(window.innerHeight / 2),\r\n          mousePosition.current.X - Math.floor(window.innerWidth / 2)\r\n        )\r\n      );\r\n    }\r\n\r\n    p5.rect(-25, -25, 50, 50);\r\n    p5.fill(255, 0, 0);\r\n    p5.rect(25, -5, 25, 10);\r\n\r\n    p5.pop();\r\n  }\r\n\r\n  function moveZombiesToPlayer() {\r\n    zombies.current.forEach((zombie) => {\r\n      const vectorX =\r\n        playerPosition.current.X -\r\n        zombie.positionX +\r\n        Math.floor(Math.random() * 300) -\r\n        150;\r\n      const vectorY =\r\n        playerPosition.current.Y -\r\n        zombie.positionY +\r\n        Math.floor(Math.random() * 300) -\r\n        150;\r\n\r\n      let dist = Math.sqrt(\r\n        Math.pow(\r\n          Math.floor(Math.abs(playerPosition.current.X - zombie.positionX)),\r\n          2\r\n        ) +\r\n          Math.pow(\r\n            Math.floor(Math.abs(playerPosition.current.Y - zombie.positionY)),\r\n            2\r\n          )\r\n      );\r\n\r\n      if (zombie.flankCounter === 0 || dist < 100) {\r\n        zombie.positionX +=\r\n          (ZOMBIE_SPEED * vectorX) / (Math.abs(vectorX) + Math.abs(vectorY));\r\n        zombie.positionY +=\r\n          (ZOMBIE_SPEED * vectorY) / (Math.abs(vectorX) + Math.abs(vectorY));\r\n\r\n        let r = Math.floor(Math.random() * 100);\r\n\r\n        if (r > 95) {\r\n          zombie.flankCounter = 10;\r\n        }\r\n        if (r < 5) {\r\n          zombie.flankCounter = -10;\r\n        }\r\n      } else {\r\n        let m = 0;\r\n        if (zombie.flankCounter > 0) {\r\n          m = ZOMBIE_FLANK;\r\n          zombie.flankCounter -= 1;\r\n        } else {\r\n          m = ZOMBIE_FLANK;\r\n          zombie.flankCounter += 1;\r\n        }\r\n\r\n        if (Math.abs(vectorX) > Math.abs(vectorY)) {\r\n          zombie.positionX +=\r\n            (ZOMBIE_SPEED * vectorX) / (Math.abs(vectorX) + Math.abs(vectorY));\r\n          if (vectorY <= 0) {\r\n            zombie.positionY +=\r\n              (ZOMBIE_SPEED * vectorY) /\r\n                (Math.abs(vectorX) + Math.abs(vectorY)) -\r\n              m;\r\n          } else {\r\n            zombie.positionY +=\r\n              (ZOMBIE_SPEED * vectorY) /\r\n                (Math.abs(vectorX) + Math.abs(vectorY)) +\r\n              m;\r\n          }\r\n        } else {\r\n          if (vectorX <= 0) {\r\n            zombie.positionX +=\r\n              (ZOMBIE_SPEED * vectorX) /\r\n                (Math.abs(vectorX) + Math.abs(vectorY)) -\r\n              m;\r\n          } else {\r\n            zombie.positionX +=\r\n              (ZOMBIE_SPEED * vectorX) /\r\n                (Math.abs(vectorX) + Math.abs(vectorY)) +\r\n              m;\r\n          }\r\n          zombie.positionY +=\r\n            (ZOMBIE_SPEED * vectorY) / (Math.abs(vectorX) + Math.abs(vectorY));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  function zombieCoordinatesGenerator() {\r\n    const side = Math.floor(Math.random() * 4);\r\n\r\n    switch (side) {\r\n      case 0:\r\n        return [Math.floor(Math.random() * window.innerWidth), 0];\r\n      case 1:\r\n        return [\r\n          window.innerWidth,\r\n          Math.floor(Math.random() * window.innerHeight),\r\n        ];\r\n      case 2:\r\n        return [\r\n          Math.floor(Math.random() * window.innerWidth),\r\n          window.innerHeight,\r\n        ];\r\n      case 3:\r\n        return [0, Math.floor(Math.random() * window.innerHeight)];\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  function spawnZombie() {\r\n    timeWhenLastZombieSpawned.current = timerInSeconds;\r\n    const [zombieCoordsNotOffsetX, zombieCoordsNotOffsetY] =\r\n      zombieCoordinatesGenerator();\r\n    zombies.current.push({\r\n      positionX:\r\n        zombieCoordsNotOffsetX +\r\n        playerPosition.current.X -\r\n        Math.floor(window.innerWidth / 2),\r\n      positionY:\r\n        zombieCoordsNotOffsetY +\r\n        playerPosition.current.Y -\r\n        Math.floor(window.innerHeight / 2),\r\n      health: 100,\r\n      flankCounter: 0,\r\n    });\r\n  }\r\n\r\n  function drawZombie(p5) {\r\n    zombies.current.forEach((zombie) => {\r\n      p5.push();\r\n\r\n      if (zombie.health === 100) {\r\n        p5.fill(0, 128, 0);\r\n      } else if (zombie.health === 66) {\r\n        p5.fill(255, 165, 0);\r\n      } else {\r\n        p5.fill(255, 0, 0);\r\n      }\r\n\r\n      p5.rect(\r\n        zombie.positionX -\r\n          playerPosition.current.X +\r\n          Math.floor(window.innerWidth / 2) -\r\n          25,\r\n        zombie.positionY -\r\n          playerPosition.current.Y +\r\n          Math.floor(window.innerHeight / 2) -\r\n          25,\r\n        50,\r\n        50\r\n      );\r\n\r\n      p5.pop();\r\n    });\r\n  }\r\n\r\n  function initializeReloading() {\r\n    firingEnabled.current = false;\r\n\r\n    if (totalAmmoCount === 0 || currentAmmoInMagazine === 30) {\r\n      firingEnabled.current = true;\r\n      return;\r\n    }\r\n\r\n    setReloadingIndicator(true);\r\n    reloadSound.current.play();\r\n\r\n    setTimeout(() => {\r\n      if (totalAmmoCount - (30 - currentAmmoInMagazine) <= 0) {\r\n        setTotalAmmoCount(0);\r\n        setCurrentAmmoInMagazine((prev) => prev + totalAmmoCount);\r\n      } else {\r\n        setTotalAmmoCount((prev) => prev - (30 - currentAmmoInMagazine) - 1);\r\n        setCurrentAmmoInMagazine(30);\r\n      }\r\n\r\n      firingEnabled.current = true;\r\n      setReloadingIndicator(false);\r\n    }, 2500);\r\n  }\r\n\r\n  function startWave() {\r\n    cooldownMusic.current.stop();\r\n    waveMusic.current.play();\r\n    firingEnabled.current = true;\r\n\r\n    zombiesSpawningEnabled.current = true;\r\n    setTimerInSeconds(90);\r\n    timeWhenLastZombieSpawned.current = 999;\r\n    setTimeout(startCooldown, 90000);\r\n\r\n    dispatchMessage(\"Start!\", \"fast\");\r\n  }\r\n\r\n  function startCooldown() {\r\n    frameCounter.current = 0;\r\n    waveMusic.current.stop();\r\n    cooldownMusic.current.play();\r\n    framesSinceLastZombieSound.current = 999;\r\n\r\n    timeWhenLastZombieSpawned.current = -1;\r\n    firingEnabled.current = false;\r\n    zombies.current = [];\r\n    zombiesSpawningEnabled.current = false;\r\n    zombiesSpawnIntervalInSeconds.current = 10000 / (waveCounter * 5000 + 5000);\r\n\r\n    setTotalAmmoCount(60 + (waveCounter + 1) * 30);\r\n    setCurrentAmmoInMagazine(30);\r\n    setWaveCounter((prev) => {\r\n      dispatchMessage(`Wave ${prev + 1}`, \"slow\");\r\n      return prev + 1;\r\n    });\r\n    setTimerInSeconds(10);\r\n    setHp(100);\r\n    setTimeout(startWave, 10000);\r\n  }\r\n\r\n  function fireBullets(p5) {\r\n    if (\r\n      timeSinceLastBullet.current < BULLET_FIRING_SPEED_IN_FRAMES ||\r\n      !firingEnabled.current ||\r\n      currentAmmoInMagazine === 0\r\n    ) {\r\n      return;\r\n    } else {\r\n      timeSinceLastBullet.current = 0;\r\n      setCurrentAmmoInMagazine((prev) => prev - 1);\r\n    }\r\n\r\n    const vectorX = mousePosition.current.X - Math.floor(window.innerWidth / 2);\r\n    const vectorY =\r\n      mousePosition.current.Y - Math.floor(window.innerHeight / 2);\r\n\r\n    const vector = p5.createVector(\r\n      (BULLET_SPEED * vectorX) / (Math.abs(vectorX) + Math.abs(vectorY)),\r\n      (BULLET_SPEED * vectorY) / (Math.abs(vectorX) + Math.abs(vectorY))\r\n    );\r\n\r\n    bullets.current.push({\r\n      vector,\r\n      positionX: playerPosition.current.X,\r\n      positionY: playerPosition.current.Y,\r\n    });\r\n\r\n    firingSound.current.play();\r\n\r\n    if (currentAmmoInMagazine === 1) {\r\n      initializeReloading();\r\n    }\r\n  }\r\n\r\n  function drawBullets(p5) {\r\n    let i = 0;\r\n    while (i < bullets.current.length) {\r\n      const bullet = bullets.current[i];\r\n\r\n      p5.push();\r\n      p5.fill(255);\r\n\r\n      p5.ellipse(\r\n        bullet.positionX -\r\n          playerPosition.current.X +\r\n          Math.floor(window.innerWidth / 2),\r\n        bullet.positionY -\r\n          playerPosition.current.Y +\r\n          Math.floor(window.innerHeight / 2),\r\n        20\r\n      );\r\n\r\n      bullet.positionX += bullet.vector.x;\r\n      bullet.positionY += bullet.vector.y;\r\n\r\n      p5.pop();\r\n\r\n      if (\r\n        bullet.positionX > MAP_SIZE_X_IN_PIXELS ||\r\n        bullet.positionX < 0 ||\r\n        bullet.positionY < 0 ||\r\n        bullet.positionY > MAP_SIZE_Y_IN_PIXELS\r\n      ) {\r\n        bullets.current.splice(i, 1);\r\n      } else {\r\n        i++;\r\n      }\r\n    }\r\n  }\r\n\r\n  function checkBulletCollision(p5) {\r\n    let i = 0;\r\n    while (i < zombies.current.length) {\r\n      const zombie = zombies.current[i];\r\n\r\n      let j = 0;\r\n      while (j < bullets.current.length) {\r\n        const bullet = bullets.current[j];\r\n\r\n        if (\r\n          zombie.positionX <= bullet.positionX + 20 &&\r\n          zombie.positionX + 50 >= bullet.positionX &&\r\n          zombie.positionY <= bullet.positionY + 20 &&\r\n          zombie.positionY + 50 >= bullet.positionY\r\n        ) {\r\n          zombieShot.current.play();\r\n          zombie.health -= 34;\r\n\r\n          if (zombie.health < 0) {\r\n            zombieDead.current.play();\r\n            zombies.current.splice(i, 1);\r\n          }\r\n\r\n          bullets.current.splice(j, 1);\r\n        }\r\n        j++;\r\n      }\r\n      i++;\r\n    }\r\n  }\r\n\r\n  function checkDamage(p5) {\r\n    let i = 0;\r\n    while (i < zombies.current.length) {\r\n      const zombie = zombies.current[i];\r\n\r\n      if (\r\n        zombie.positionX <= playerPosition.current.X + 50 &&\r\n        zombie.positionX + 50 >= playerPosition.current.X &&\r\n        zombie.positionY <= playerPosition.current.Y + 50 &&\r\n        zombie.positionY + 50 >= playerPosition.current.Y\r\n      ) {\r\n        setHp((prev) => prev - 1 / 4);\r\n\r\n        if (framesSinceLastZombieSound.current > FRAME_RATE / 4) {\r\n          framesSinceLastZombieSound.current = 0;\r\n          switch (Math.floor(Math.random() * 3)) {\r\n            case 0:\r\n              zombieHit1.current.play();\r\n              break;\r\n            case 1:\r\n              zombieHit2.current.play();\r\n              break;\r\n            case 2:\r\n              zombieHit3.current.play();\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n\r\n        if (hp - 1 / 4 <= 0) {\r\n          gameOverMode.current = true;\r\n          gameOver();\r\n        }\r\n      }\r\n\r\n      i++;\r\n    }\r\n  }\r\n\r\n  function drawCursor(p5) {\r\n    p5.push();\r\n    p5.fill(0, 0, 255);\r\n\r\n    p5.ellipse(mousePosition.current.X, mousePosition.current.Y, 10, 10);\r\n\r\n    p5.pop();\r\n  }\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(window.innerWidth, window.innerHeight).parent(\r\n      canvasParentRef\r\n    );\r\n    p5.frameRate(FRAME_RATE);\r\n    window.scrollTo(\r\n      Math.floor(window.innerWidth / 2),\r\n      Math.floor(window.innerHeight / 2)\r\n    );\r\n    setReloadingIndicator(true);\r\n    setTimeout(() => {\r\n      setReloadingIndicator(false);\r\n      startCooldown();\r\n    }, 3000);\r\n  };\r\n\r\n  const drawMap = (p5) => {\r\n    p5.image(\r\n      background.current,\r\n      0,\r\n      0,\r\n      window.innerWidth,\r\n      window.innerHeight,\r\n      (playerPosition.current.X / MAP_SIZE_X_IN_PIXELS) *\r\n        (BACKGROUND_SIZE_X_IN_PIXELS - window.innerWidth),\r\n      (playerPosition.current.Y / MAP_SIZE_Y_IN_PIXELS) *\r\n        (BACKGROUND_SIZE_Y_IN_PIXELS - window.innerHeight),\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n\r\n    p5.image(\r\n      img.current,\r\n      0,\r\n      0,\r\n      window.innerWidth,\r\n      window.innerHeight,\r\n      Math.floor(playerPosition.current.X - window.innerWidth / 2),\r\n      Math.floor(playerPosition.current.Y - window.innerHeight / 2),\r\n      window.innerWidth,\r\n      window.innerHeight\r\n    );\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    if (!gameOverMode.current) {\r\n      framesSinceLastZombieSound.current++;\r\n      timeSinceLastBullet.current++;\r\n      mouseDown.current && fireBullets(p5);\r\n\r\n      if (frameCounter.current % FRAME_RATE == 0) {\r\n        setTimerInSeconds((prev) => prev - 1);\r\n      }\r\n\r\n      if (firingEnabled.current) {\r\n        if (p5.keyIsDown(82)) {\r\n          firingEnabled.current = false;\r\n          initializeReloading();\r\n        }\r\n      }\r\n\r\n      if (\r\n        timeWhenLastZombieSpawned.current - timerInSeconds >\r\n        zombiesSpawnIntervalInSeconds.current\r\n      ) {\r\n        spawnZombie();\r\n      }\r\n\r\n      frameCounter.current++;\r\n\r\n      p5.background(0);\r\n      movement(p5);\r\n      drawMap(p5);\r\n      drawPlayer(p5);\r\n      moveZombiesToPlayer();\r\n\r\n      if (bullets.current !== undefined && bullets.current.length > 0) {\r\n        drawBullets(p5);\r\n      }\r\n\r\n      if (zombies.current !== undefined && zombies.current.length > 0) {\r\n        drawZombie(p5);\r\n      }\r\n\r\n      checkBulletCollision(p5);\r\n      checkDamage(p5);\r\n      drawCursor(p5);\r\n    }\r\n  };\r\n\r\n  const img = useRef();\r\n  const background = useRef();\r\n\r\n  const firingSound = useRef();\r\n  const cooldownMusic = useRef();\r\n  const reloadSound = useRef();\r\n\r\n  const zombieHit1 = useRef();\r\n  const zombieHit2 = useRef();\r\n  const zombieHit3 = useRef();\r\n\r\n  const zombieShot = useRef();\r\n  const zombieDead = useRef();\r\n\r\n  const waveMusic = useRef();\r\n\r\n  const preload = (p5) => {\r\n    firingSound.current = p5.loadSound(\r\n      process.env.PUBLIC_URL + \"/sounds/shot.wav\"\r\n    );\r\n\r\n    cooldownMusic.current = p5.loadSound(\r\n      process.env.PUBLIC_URL + \"/sounds/cooldown.mp3\"\r\n    );\r\n\r\n    reloadSound.current = p5.loadSound(\r\n      process.env.PUBLIC_URL + \"/sounds/reload.wav\"\r\n    );\r\n\r\n    zombieHit1.current = p5.loadSound(\r\n      process.env.PUBLIC_URL + \"/sounds/Zombie_hit_1.wav\"\r\n    );\r\n\r\n    zombieHit2.current = p5.loadSound(\r\n      process.env.PUBLIC_URL + \"/sounds/Zombie_hit_2.wav\"\r\n    );\r\n\r\n    zombieHit3.current = p5.loadSound(\r\n      process.env.PUBLIC_URL + \"/sounds/Zombie_hit_3.wav\"\r\n    );\r\n\r\n    waveMusic.current = p5.loadSound(\r\n      process.env.PUBLIC_URL + \"/sounds/wave.mp3\"\r\n    );\r\n\r\n    zombieShot.current = p5.loadSound(\r\n      process.env.PUBLIC_URL + \"/sounds/Zombie_shot.wav\"\r\n    );\r\n\r\n    zombieDead.current = p5.loadSound(\r\n      process.env.PUBLIC_URL + \"/sounds/Zombie_dead.wav\"\r\n    );\r\n\r\n    img.current = p5.loadImage(process.env.PUBLIC_URL + \"/img/map.png\");\r\n    background.current = p5.loadImage(\r\n      process.env.PUBLIC_URL + \"/img/star-background.jpg\"\r\n    );\r\n  };\r\n\r\n  const gameOver = () => {\r\n    dispatchMessage(\"Game over :(\", \"slow\");\r\n    setTimeout(() => {\r\n      setWaveCounter(0);\r\n      gameOverMode.current = false;\r\n      startCooldown();\r\n    }, 6000);\r\n  };\r\n\r\n  const messageRef = useRef();\r\n  const [message, setMessage] = useState(\"\");\r\n  const dispatchMessage = (message, mode) => {\r\n    setMessage(message);\r\n\r\n    if (mode === \"fast\") {\r\n      messageRef.current.style.top = \"calc(100vh + 100px)\";\r\n\r\n      setTimeout(() => {\r\n        messageRef.current.style.transition = \"none\";\r\n        messageRef.current.style.top = \"-100px\";\r\n        setTimeout(() => {\r\n          messageRef.current.style.transition = \"top 2s ease-in-out 0s\";\r\n        }, 50);\r\n      }, 2000);\r\n    } else {\r\n      messageRef.current.style.top = \"50vh\";\r\n      setOverlayOpacity(0.8);\r\n\r\n      setTimeout(() => {\r\n        messageRef.current.style.top = \"calc(100vh + 100px)\";\r\n        setOverlayOpacity(0);\r\n\r\n        setTimeout(() => {\r\n          messageRef.current.style.transition = \"none\";\r\n          messageRef.current.style.top = \"-100px\";\r\n          setTimeout(() => {\r\n            messageRef.current.style.transition = \"top 2s ease-in-out 0s\";\r\n          }, 50);\r\n        }, 2000);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProgressWidget\r\n        waveCounter={waveCounter}\r\n        timerInSeconds={timerInSeconds}\r\n      />\r\n      <AmmoCount\r\n        totalAmmoCount={totalAmmoCount}\r\n        currentAmmoInMagazine={currentAmmoInMagazine}\r\n      />\r\n      <HpBar hp={hp} />\r\n      <Sketch\r\n        mousePressed={() => (mouseDown.current = true)}\r\n        mouseReleased={() => (mouseDown.current = false)}\r\n        preload={preload}\r\n        setup={setup}\r\n        draw={draw}\r\n      />\r\n      <CircularProgress\r\n        size={300}\r\n        style={{\r\n          display: reloadingIndicator ? \"block\" : \"none\",\r\n          position: \"fixed\",\r\n          top: \"calc(50vh - 150px)\",\r\n          left: \"calc(50vw - 150px)\",\r\n        }}\r\n      />\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          transition: \"opacity 2s ease-in-out 0s\",\r\n          height: \"100vh\",\r\n          width: \"100vw\",\r\n          opacity: overlayOpacity,\r\n          backgroundColor: \"black\",\r\n          top: 0,\r\n        }}\r\n      ></div>\r\n      <Typography\r\n        className={classes.message}\r\n        ref={messageRef}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: -100,\r\n          left: \"50vw\",\r\n          width: \"100vw\",\r\n          textAlign: \"center\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          transition: \"top 2s ease-in-out 0s\",\r\n        }}\r\n      >\r\n        {message}\r\n      </Typography>\r\n      <Controls />\r\n    </>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Game from \"./components/Game\";\r\nimport {\r\n  CssBaseline,\r\n  createTheme,\r\n  responsiveFontSizes,\r\n  ThemeProvider,\r\n} from \"@material-ui/core\";\r\n\r\nconst theme = responsiveFontSizes(\r\n  createTheme({\r\n    typography: {\r\n      fontFamily: [\"Syne Tactile\", \"cursive\"].join(\",\"),\r\n    },\r\n    palette: {\r\n      primary: {\r\n        main: \"#00acc1\",\r\n      },\r\n      error: {\r\n        main: \"#e53935\",\r\n      },\r\n      type: \"dark\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Game />\r\n      </ThemeProvider>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}